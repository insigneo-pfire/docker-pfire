Bootstrap: docker
From: centos:8

#
# Bind system folders into container folders with writing permissions
# 1) run, exec, shell, and instance start will accept the --bind/-B command-line option to specify bind paths [:dest_in_container[:ro|rw]]
#    -B can be repeated or the paths can be comma separated
# 2) $SINGULARITY_BIND or $SINGULARITY_BINDPATH
#
#



    
%post

    # Setup directory structure
    export SANDBOX=/singularity_sandbox
    mkdir -p $SANDBOX 
    cd ${SANDBOX}
      
    #### System-wide installations
    dnf -y --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos   
    yum install -y wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm    
    yum update -y
    dnf install -y 'dnf-command(config-manager)'
    dnf config-manager --set-enabled powertools

    yum update -y 
        
    yum install -y  git cmake make automake python2 python3 vim
    yum install -y  gcc-toolset-9-gcc-gfortran  
    # yum install -y  gcc-toolset-9    
    yum install -y     boost-program-options boost-test boost-filesystem boost-iostreams boost-serialization boost-timer boost-program-options boost-test boost-filesystem boost-iostreams boost-serialization boost-devel \

    #OpenImageIO-devel dcmtk-devel \
    #hdf5-openmpi-devel petsc
    #openmpi-devel openmpi\  tzdata 
    
    dnf groupinstall -y "Development Tools"

    ##############################################################
    # yum install -y   openmpi-devel openmpi
     
     
     
    echo "Installing OpenMPI..."



    export OMPI_VERSION=4.0.1
    export OMPI_DIR=/opt/ompi
    export OMPI_URL="https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-$OMPI_VERSION.tar.bz2"
    mkdir -p /tmp/ompi
    mkdir -p /opt

    # Download
    cd /tmp/ompi && wget -O openmpi-$OMPI_VERSION.tar.bz2 $OMPI_URL && tar -xjf openmpi-$OMPI_VERSION.tar.bz2
 
    # Compile and install
    cd /tmp/ompi/openmpi-$OMPI_VERSION && ./configure --prefix=$OMPI_DIR && make -j8 install

    # Set env variables so we can compile our application
    export PATH=$OMPI_DIR/bin:$PATH
    export LD_LIBRARY_PATH=$OMPI_DIR/lib:$LD_LIBRARY_PATH

    echo "export MPI_ROOT=${OMPI_ROOT}" 				   >> $SINGULARITY_ENVIRONMENT
    echo "export MPI_DIR=${OMPI_ROOT}" 				   >> $SINGULARITY_ENVIRONMENT
    echo "export CPATH=\"\${CPATH}:${MPI_ROOT}/include\"" >> $SINGULARITY_ENVIRONMENT
    echo "export PATH=\"\${PATH}:$PATH}e\"" 		   >> $SINGULARITY_ENVIRONMENT  
####################################################################################

# Build time not runtime but not build time
%environment
    # Point to OMPI binaries, libraries, man pages
    export OMPI_DIR=/opt/ompi
    export MPI_ROOT=${OMPI_DIR}
    export PATH="$OMPI_DIR/bin:$PATH"
    export LD_LIBRARY_PATH="$OMPI_DIR/lib:$LD_LIBRARY_PATH"
    export MANPATH="$OMPI_DIR/share/man:$MANPATH"
    

    
%runscript    
    alias ll='ls -lrath'