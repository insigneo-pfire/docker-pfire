#Bootstrap: library
Bootstrap: localimage
From: pfire_openmpi.sif


###################
# test using xdmf3
####################

%environment

%post    
    ###################################################	 
    #export SANDBOX=/singularity_sandbox
    #mkdir -p $SANDBOX 
    #cd ${SANDBOX}
    
    
	# Install XDMF
    
    #cd ${SANDBOX}
    #XDMF_INSTALL_DIR="${SANDBOX}/xdmf_bin"
    
    
    
    
    
    # wget https://gitlab.kitware.com/xdmf/xdmf/-/archive/master/xdmf-master.tar.gz
    # tar -zxvf xdmf-master.tar.gz
    # cd xdmf-master
	# mkdir build ; cd build
	#  cmake .. -DCMAKE_INSTALL_PREFIX=${XDMF_INSTALL_DIR} -DBUILD_SHARED_LIBS=1 -DXDMF_WRAP_PYTHON=1 -Wno-dev -DPYTHON_INCLUDE_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")
	# #-DPYTHON_INCLUDE_DIR=$(python -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())")  -DPYTHON_LIBRARY=$(python -c "import distutils.sysconfig as sysconfig; print(sysconfig.get_config_var('LIBDIR'))")
	# make -j 
	
	# #echo "export XDMF_ROOT=${XDMF_INSTALL_DIR}" >> $SINGULARITY_ENVIRONMENT
	# echo "export LD_LIBRARY_PATH=${XDMF_INSTALL_DIR}/lib/:${XDMF_INSTALL_DIR}/lib64/:${LD_LIBRARY_PATH}" >> $SINGULARITY_ENVIRONMENT
	
	# echo "export CPATH=${XDMF_INSTALL_DIR}/include/:${CPATH}" >> $SINGULARITY_ENVIRONMENT

	# echo "export XDMF_ROOT=${XDMF_INSTALL_DIR}" >> $SINGULARITY_ENVIRONMENT 
	####################################

    
    # Install system wide packages and updates
    dnf -y --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos
	dnf -y distro-sync
	dnf -y install https://download.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm
	yum update && yum install yum-utils -y
	yum-config-manager --enable powertools
	dnf install -y https://download1.rpmfusion.org/free/el/rpmfusion-free-release-8.noarch.rpm
	dnf install -y https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-8.noarch.rpm

	yum install -y ffmpeg-devel ffmpeg  ffmpeg-libs
	yum install -y giflib giflib-devel qt5-qttools 
	#yum install -y OpenEXR-libs  OpenEXR-devel libpng libpng-devel  libtiff-devel libtiff libjpeg-turbo-devel libjpeg-turbo OpenEXR-libs  OpenEXR-devel
	yum install -y dcmtk-devel dcmtk  
	# OpenImageIO-devel OpenImageIO
	
	############################
	
	SANDBOX=/sandbox_oiio/
	DEST_OIIO=/usr/local/oiio/
	
		  
	echo "export PATH=\"\${PATH}:${DEST_OIIO}/bin/\""        >> $SINGULARITY_ENVIRONMENT 
	
	echo "export OIIO_ROOT=${DEST_OIIO}"  >> $SINGULARITY_ENVIRONMENT
	echo "export OPENIMAGEIO_ROOT_DIR=${DEST_OIIO}"  >> $SINGULARITY_ENVIRONMENT
	
		
	
	echo "export LD_LIBRARY_PATH=\"\${LD_LIBRARY_PATH}:${DEST_OIIO}/lib:${DEST_OIIO}/lib64:\"" >> $SINGULARITY_ENVIRONMENT
	
	echo "export CPATH=\"\${CPATH}:${DEST_OIIO}/include/\"" >> $SINGULARITY_ENVIRONMENT
	
	mkdir -p $SANDBOX
	cd $SANDBOX
		
	git clone https://github.com/OpenImageIO/oiio.git oiio
	cd oiio
	
	
	mkdir build
	cd build

		
	#cmake ../ -DUSE_PYTHON=0  -DUSE_Qt5=0 -DUSE_OpenGL=0 -DOIIO_DOWNLOAD_MISSING_TESTDATA=1 -DBUILD_TESTING=1    
	#make -j 
	#make install
	
	
	
	
	# Required dependencies
	../src/build-scripts/build_openexr.bash
    
    #export OPENEXR_ROOT=$SANDBOX/oiio/build/ext/dist
    #export OPENEXR_ROOT=/home/tartarini/DEVELOP/INSIGNEO/insigneo-pfire/docker-pfire/singularity/oiio_sandbox/oiio/build/ext/dist
    #export ILMBASE_ROOT=/home/tartarini/DEVELOP/INSIGNEO/insigneo-pfire/docker-pfire/singularity/oiio_sandbox/oiio/build/ext/dist
    #export OPENEXR_LIBRARY_DIR=/home/tartarini/DEVELOP/INSIGNEO/insigneo-pfire/docker-pfire/singularity/oiio_sandbox/oiio/build/ext/dist/lib
    #export LD_LIBRARY_PATH=/home/tartarini/DEVELOP/INSIGNEO/insigneo-pfire/docker-pfire/singularity/oiio_sandbox/oiio/build/ext/dist/lib:$LD_LIBRARY_PATH
    
    
	../src/build-scripts/build_libtiff.bash
	#export LIBTIFF_ROOT=/home/tartarini/DEVELOP/INSIGNEO/insigneo-pfire/docker-pfire/singularity/oiio_sandbox/oiio/build/ext/dist
	
	../src/build-scripts/build_OpenJPEG.bash
	 #export OpenJPEG_ROOT=/home/tartarini/DEVELOP/INSIGNEO/insigneo-pfire/docker-pfire/singularity/oiio_sandbox/oiio/build/ext/dist
	 
	 
	 #  Optional dependencies
	 
	../src/build-scripts/build_libpng.bash
	#../src/build-scripts/build_gif.bash 
	 
	../src/build-scripts/build_libraw.bash 
	../src/build-scripts/build_zlib.bash
	#export ZLIB_ROOT=/home/tartarini/DEVELOP/INSIGNEO/insigneo-pfire/docker-pfire/singularity/oiio_sandbox/oiio/build/ext/dist
	
	../src/build-scripts/build_libjpeg-turbo.bash 
	#export JPEGTurbo_ROOT=/home/tartarini/DEVELOP/INSIGNEO/insigneo-pfire/docker-pfire/singularity/oiio_sandbox/oiio/build/ext/dist

	../src/build-scripts/build_pugixml.bash
    #export 	pugixml_ROOT=$DEST_OIIO/

	mkdir -p  $DEST_OIIO
			 
	cp -r $SANDBOX/oiio/build/ext/dist/* $DEST_OIIO/
	ls -lrat $DEST_OIIO/

	 
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$DEST_OIIO/lib:$DEST_OIIO/
		
	export ILMBASE_ROOT=$DEST_OIIO/
	export OPENEXR_ROOT=$DEST_OIIO/
    	
	export ILMBASE_LIBRARY_DIR=$DEST_OIIO/
	export OPENEXR_LIBRARY_DIR=$DEST_OIIO/
	export OpenJPEG_ROOT=$DEST_OIIO/
	export PNG_ROOT=$DEST_OIIO/
	#export GIF_ROOT=$DEST_OIIO/
	export LIBTIFF_ROOT=$DEST_OIIO/
	export LIBRAW_ROOT=$DEST_OIIO/
	
	export ZLIB_ROOT=$DEST_OIIO/
	export JPEGTurbo_ROOT=$DEST_OIIO/
	export pugixml_ROOT=$DEST_OIIO/



	
	#cmake ../ -DUSE_PYTHON=0  -DUSE_Qt5=0 -DUSE_OpenGL=0 -DOIIO_DOWNLOAD_MISSING_TESTDATA=1 -DBUILD_TESTING=1         -DCMAKE_INSTALL_PREFIX=$DEST_OIIO
	
	#-DUSELibRaw=0 -DOpenColorIO=0 -DFreetype=0  -DOpenJPEG=0 -DLibheif=0
	
	cmake ../ -DEMBEDPLUGIN=1 -DBUILD_OIIOUTIL_ONLY=0 --log-level=TRACE -DUSE_PYTHON=0 -DUSE_OpenCV=0 -DUSE_Libheif=0 -DUSE_LibRaw=0 -DUSE_Ptex=0 -DUSE_WebP=0 -DUSE_OpenVDB=0 -DUSE_Nuke=0 -DOIIO_DOWNLOAD_MISSING_TESTDATA=1 -DBUILD_TESTING=1 -DCMAKE_INSTALL_PREFIX=$DEST_OIIO 
	
	make -j
	
	make install
	#make test
	

	